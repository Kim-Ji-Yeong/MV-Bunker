<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nurim.mvbunker.movies.MoviesMapper">


    <insert id="insOriginGenres">
        INSERT IGNORE INTO t_genres (genreId, genreName)
        VALUES (${genreId}, #{genreName})
    </insert>

    <insert id="insMovies">
        INSERT INTO t_movies
        (id, title, originalTitle, backdropPath, posterPath, releaseDate, adult, overview, originalLanguage, popularity, mainGenre)
        VALUES
        (${id}, #{title}, #{originalTitle}, #{backdropPath}, #{posterPath}, #{releaseDate}, #{adult}, #{overview}, #{originalLanguage}, #{popularity}, ${mainGenre})
        ON DUPLICATE KEY UPDATE popularity = VALUES(popularity)
    </insert>
    <insert id="insMoviesGenre">
        INSERT INTO t_movie_genres (id, genreId)
        VALUES 
        <foreach collection="list" item="item" separator=",">
            (${item.id}, #{item.genreId})
        </foreach>
    </insert>

    <resultMap id="getMovieDomain" type="MovieDomain">
        <result property="id" column="id"/>
        <collection property="genres" column="id" ofType="GenreEntity" javaType="ArrayList" select="selMovieGenre"/>
    </resultMap>
    <select id="selMovieGenre" resultType="GenreEntity">
        SELECT genreId, genreName FROM t_movie_genre_set WHERE id = ${id}
    </select>

    <select id="selPopMovies" resultMap="getMovieDomain">
        SELECT A.*, AVG(B.production) AS production, AVG(B.performance) AS performance,
               AVG(B.visual_beauty) AS visual_beauty, AVG(B.music) AS music, AVG(B.plot) AS plot
        FROM t_movies A
        LEFT JOIN t_eval B
        ON A.id = B.id
        GROUP BY A.id
        ORDER BY MAX(A.popularity) DESC
        LIMIT 20
    </select>

    <select id="selTheMovie" resultType="MyMovieDb">
        SELECT *
        FROM t_movies
        WHERE id = ${id}
    </select>
</mapper>