<?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nurim.mvbunker.review.ReviewMapper">

    <!-- 리뷰 작성 후 DB에 저장 -->
    <insert id="insReview" useGeneratedKeys="true" keyProperty="i_review">
        insert into t_review
        (id, i_user, re_ctnt,title, poster)
        VALUES
            (#{id}, #{i_user}, #{re_ctnt},#{title}, #{poster});
    </insert>
    <!-- 방금 쓴 리뷰 셀렉트 -->
    <select id="selJustReview" resultType="ReviewDomain">
        SELECT * FROM t_review WHERE i_review = ${i_review}
    </select>

    <!-- 전체리뷰 - 최신순&좋아요많은순 정렬 | default=최신순 >>> hover 시 mapper와 분리! -->
    <select id="selAllReview" resultType="ReviewDomain">
        select R.profileImg as profileImg, R.unn as unn, R.i_user as i_user, R.i_review as i_review, R.title as title, R.id as id, R.poster as poster, R.regdt as regdt, R.re_ctnt as re_ctnt,
                E.i_user as Ei_user, E.id as Eid,
                round((avg(E.production)+avg(E.performance)+avg(E.visual_beauty)+avg(E.music)+avg(E.plot))/5,3)as totalAvg_Review,
                count(case when RL.disLike = 0 then 1 end) as review_like_cnt
        from(
                select B.profileImg as profileImg ,B.unn as unn, A.i_user as i_user, A.i_review as i_review, A.title as title, A.id as id, A.poster As poster, A.regdt as regdt, A.re_ctnt as re_ctnt
                from t_review A
                left join t_user B
                on A.i_user = B.i_user
            )R
        left join t_eval E
            on R.id = E.id and R.i_user = E.i_user
        left join t_review_like RL
            on R.i_review = RL.i_review
        group by R.i_review
        <choose>
        <when test="orderby == 0">
            order by review_like_cnt DESC
        </when>
        <otherwise>
            order by i_review DESC
        </otherwise>
        </choose>
        LIMIT ${minIndex}, ${listLength};
    </select>

    <!-- 그 영화의 리뷰들 - default가 좋아요 순
    orderby == 0 : 최신순, == 1 : 좋아요 많은 순 -->
    <select id="selReview" resultType="ReviewDomain">
        select R.unn as unn, R.i_user as i_user, R.i_review as i_review, R.title as title, R.id as id, R.poster as poster, R.regdt as regdt, R.re_ctnt as re_ctnt,
               E.i_user AS Ei_user,E.id as Eid, E.production as production, E.performance as performance, E.visual_beauty as visual_beauty, E.music as music, E.plot as plot,
               count(case when RL.disLike = 0 then 1 end) as review_dislike_cnt
        from(
            select B.unn as unn, A.i_user as i_user, A.i_review as i_review, A.title as title, A.id as id, A.poster As poster, A.regdt as regdt, A.re_ctnt as re_ctnt
            from t_review A
                left join t_user B
                    on A.i_user = B.i_user
            )R
        left join t_eval E
            on R.id = E.id and R.i_user = E.i_user
        left join t_review_like RL
            on R.i_review = RL.i_review
        where R.id = #{param.id}
        group by R.i_review
        <choose>
        <when test="pagingDTO.orderby == 0">
            ORDER BY R.i_review DESC;
        </when>
        <when test="pagingDTO.orderby == 1">
            order by review_dislike_cnt DESC;
        </when>
        </choose>
    </select>

    <update id="updReview">
        update t_review
        set re_ctnt = ${re_ctnt}
        where i_user = #{i_user} and id = #{id}
    </update>

    <delete id="delReview">
       delete from t_review
        where i_user = #{i_user} and id = #{id}
    </delete>

    <!-- 평가 -->
    <insert id="insEval">
        INSERT INTO t_eval
        (i_user, id, production, performance, visual_beauty, music, plot)
        VALUES
        (${i_user}, ${id}, IF(${production}=0, NULL, ${production}),
         IF(${performance}=0, NULL, ${performance}),
         IF(${visual_beauty}=0, NULL, ${visual_beauty}),
         IF(${music}=0, NULL, ${music}), IF(${plot}=0, NULL, ${plot}))
        ON DUPLICATE KEY UPDATE
        <if test="production != 0">
            production = VALUES(production)
        </if>
        <if test="performance != 0">
            performance = VALUES(performance)
        </if>
        <if test="visual_beauty != 0">
            visual_beauty = VALUES(visual_beauty)
        </if>
        <if test="music != 0">
            music = VALUES(music)
        </if>
        <if test="plot != 0">
            plot = VALUES(plot)
        </if>
    </insert>
    <select id="checkEval" resultType="Integer">
        SELECT COUNT(*) FROM t_eval WHERE id = ${id} AND i_user = ${i_user}
    </select>

    <!-- ReviewDetail - 별(★)로 영화에 대한 평점 별 평균 띄워 줄 때 사용 -->
    <select id="selEval" resultType="EvalEntity">
        SELECT AVG(production) AS production, AVG(performance) AS performance, AVG(visual_beauty) AS visual_beauty
        , AVG(music) AS music, AVG(plot) AS plot
        FROM t_eval
        WHERE id = ${id}
    </select>

    <!-- ReviewDetail - 특정 리뷰에 별 띄워 줄 때 사용 → ★5 -->
    <select id="selMyEval" resultType="EvalEntity">
        SELECT *
        FROM t_eval
        WHERE id = ${id} AND i_user = ${i_user}
    </select>

<!--    &lt;!&ndash; Review - 특정 리뷰에 대한 총 평점 평균 &ndash;&gt;-->
<!--    <select id="selReviewTotalEval" resultType="double">-->
<!--        SELECT (production+performance+visual_beauty+music+plot)/5 AS totalAvg_Review-->
<!--        FROM-->
<!--            (-->
<!--                SELECT AVG(production) AS production, AVG(performance) AS performance, AVG(visual_beauty) AS visual_beauty-->
<!--                     , AVG(music) AS music, AVG(plot) AS plot-->
<!--                FROM t_eval-->
<!--                WHERE id = ${id} AND i_user = #{i_user}-->
<!--            )A;-->
<!--    </select>-->

    <!-- Review - 포스터에 hover 시 띄워 줄 특정 영화에 대한 총 평점 평균 -->
<!--    <select id="selMovieTotalEval" resultType="double">-->
<!--        SELECT round((production+performance+visual_beauty+music+plot)/5) AS totalAvg_Movie-->
<!--        FROM-->
<!--            (-->
<!--                SELECT AVG(production) AS production, AVG(performance) AS performance, AVG(visual_beauty) AS visual_beauty-->
<!--                     , AVG(music) AS music, AVG(plot) AS plot-->
<!--                FROM t_eval-->
<!--                WHERE id = #{id}-->
<!--            )A;-->
<!--    </select>-->


    <!-- 댓글 -->
    <insert id="insReviewCmt">
        INSERT INTO t_review_cmt
            (i_review, i_user, cmt)
        VALUES
            (#{i_review}, #{i_user}, #{cmt});
    </insert>

    <delete id="delReviewCmt">
        DELETE FROM t_review_cmt WHERE i_review = #{i_review} and i_user = #{i_user};
    </delete>

    <update id="updReviewCmt">
        UPDATE t_review_cmt SET cmt=#{cmt} where i_cmt = ${i_cmt} and i_user = #{i_user};
    </update>
    
    <select id="selReviewCmt" resultType="ReviewCmtEntity">
        SELECT A.*
        FROM (
                 SELECT
                     A.i_cmt, A.cmt, A.regdt, A.i_review,
                         B.unn
                 FROM t_review_cmt A
                          INNER JOIN t_user B
                                     ON A.i_user = B.i_user
                 WHERE A.i_review = #{i_review}
                 ORDER BY i_cmt ASC) A
        GROUP BY A.i_cmt;
    </select>

</mapper>